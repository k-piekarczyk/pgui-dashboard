{"version":3,"sources":["i18n.ts","context/colorMode.context.ts","context/language.context.ts","components/UserIcon.component.tsx","components/PageContainer.component.tsx","components/LargeSplash.component.tsx","assets/mikolaj.jpg","assets/lukasz.jpg","assets/krzysiek.jpg","pages/Login.page.tsx","components/Tile.component.tsx","pages/Dashboard.page.tsx","components/ProductImage.component.tsx","pages/Ranking.page.tsx","pages/SalesChart.page.tsx","App.tsx","palette.ts","reportWebVitals.ts","components/ScrollToTop.component.tsx","index.tsx"],"names":["i18n","use","initReactI18next","LanguageDetector","init","resources","pl","translation","Dashboard","Theme","Dark","Light","Language","Polish","English","Orders","Returns","Category","Picture","Name","Turnover","lng","interpolation","escapeValue","ColorModeContext","React","createContext","toggleColorMode","LanguageContext","toggleLanguage","UserIcon","props","userImage","localStorage","getItem","userColor","styl","className","style","PageContainer","theme","useTheme","colorMode","useContext","langMode","useState","DateTime","now","currentTime","setCurrentTime","useEffect","clockInterval","setInterval","clearInterval","useTranslation","t","navigate","useNavigate","previousPage","onClick","route","name","undefined","Button","size","variant","language","palette","mode","loggedIn","header","toFormat","locale","children","LargeSplash","borderColor","backgroundImage","user","imagePath","backgroundSize","backgroundRepeat","backgroundPosition","setItem","Login","mikolajImage","lukaszImage","krzysiekImage","Tile","width","height","Rating","value","readOnly","sx","marginBottom","ProductImage","src","imageraw","alt","imageName","Ranking","DisplayData","JsonData","items","map","i","picture","sold","turnover","currency","JsonDataDisplay","SalesChart","category","setCategory","timePeriod","setTimePeriod","previousPeriod","setPreviousPeriod","ref","useRef","buildGraph","data","previousData","xLabel","yLabel","margin","current","offsetWidth","yMax","Math","max","d","y","d3","domain","range","x","concat","time","padding","remove","svg","append","attr","call","g","selectAll","join","enter","update","exit","length","indexOf","text","json_data","today","previous","labelX","labelY","week","month","product","buildGraphData","App","setMode","useMemo","prevMode","newMode","document","documentElement","classList","add","setLang","prevLang","newLang","changeLanguage","createTheme","background","tile","border","button","primary","getPalette","Provider","ThemeProvider","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","useLocation","window","scrollTo","ReactDOM","render","StrictMode","getElementById","debug"],"mappings":"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","file":"static/js/main.1dddecae.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\n// the translations\n// (tip move them in a JSON file and import them,\n// or even better, manage them separated from your code: https://react.i18next.com/guides/multiple-translation-files)\nconst resources = {\n  pl: {\n    translation: {\n      \"Account selection\": \"Wybór konta\",\n      Dashboard: \"Strona główna\",\n      Theme: \"Motyw\",\n      Dark: \"Ciemny\",\n      Light: \"Jasny\",\n      Language: \"Język\",\n      Polish: \"Polski\",\n      English: \"Angielski\",\n      \"Return to\": \"Powrót do\",\n      \"Good evening\": \"Dobry wieczór\",\n      Orders: \"Zamówienia\",\n      \"Quality of sales\": \"Jakość sprzedaży\",\n      \"Customer feedback\": \"Opinie kupujących\",\n      \"Offer ranking\": \"Ranking offer\",\n      \"Sales chart\": \"Wykres sprzedaży\",\n      \"Sales advice\": \"Porady sprzedażowe\",\n      \"Not paid\": \"Nieopłacone\",\n      \"Not sent\": \"Niewysłane\",\n      Returns: \"Zwroty\",\n      \"Currently processed orders\": \"Obecnie realizowane zamówienia\",\n      \"Order history\": \"Historia zamówień\",\n      \"90 day average\": \"Średnia z ostatnich 90 dni\",\n      \"Check your category: Specialist\": \"Sprawdź swoją kategorię: Wyjadacz\",\n      Category: \"Kategoria\",\n      Picture: \"Zdjęcie\",\n      Name: \"Nazwa\",\n      \"Sold Items\": \"Sprzedane sztuki\",\n      Turnover: \"Obrót\",\n      \"30 day average\": \"średnia z ostatnich 30 dni\",\n      \"Top seller\": \"Najczęściej kupowane\",\n      \"Bottom seller\": \"Najrzadziej kupowane\",\n      \"Navigate to data from chart\": \"Przejdź do danych z wykresu\",\n      \"last month\": \"ostatni miesiąc\",\n      \"last 3 months\": \"ostatnie 3 miesiące\",\n      \"last year\": \"ostatni rok\",\n      \"Graph\": \"Wykres\",\n      \"Sales amount\": \"Ilość sprzedaży\",\n      \"Time period\": \"Zakres czasu\",\n      \"Today\": \"Dzisiaj\",\n      \"Current week\": \"Obecny tydzień\",\n      \"Current month\": \"Obecny miesiąc\",\n      \"Include previous period\": \"Uwzględnij okres poprzedzający\",\n      \"Choose product\": \"Wybierz produkt\",\n      \"Product\": \"Produkt\"\n    },\n  },\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(LanguageDetector)\n  .init({\n    resources,\n    lng: \"en\", // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\n    // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\n    // if you're using a language detector, do not define the lng option\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from \"react\";\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\n\nexport default ColorModeContext;","import React from \"react\";\n\nconst LanguageContext = React.createContext({ toggleLanguage: () => {} });\n\nexport default LanguageContext;","import { FunctionComponent } from \"react\";\n\nimport \"./UserIcon.component.scss\"\n\nconst UserIcon: FunctionComponent<{}> = (props) => {\n  const userImage = localStorage.getItem(\"userImage\");\n  const userColor = localStorage.getItem(\"userColor\");\n\n  const styl: any = {};\n\n  if (userImage) styl[\"backgroundImage\"] = `url(${userImage})`;\n  if (userColor) styl[\"borderColor\"] = userColor;\n\n  return styl ? <div className=\"UserIcon\" style={styl} /> : <div className=\"UserIcon\" />;\n};\n\nexport default UserIcon;\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\nimport { Button, useTheme } from \"@mui/material\";\n\nimport { DateTime } from \"luxon\";\n\nimport ColorModeContext from \"../context/colorMode.context\";\nimport { useTranslation } from \"react-i18next\";\nimport LanguageContext from \"../context/language.context\";\n\nimport \"./PageContainer.component.scss\";\nimport { useNavigate } from \"react-router\";\nimport UserIcon from \"./UserIcon.component\";\n\ninterface PageContainerProps {\n  header: string;\n  loggedIn?: boolean;\n  previousPage?: {\n    name: string;\n    route: string;\n  };\n}\n\nconst PageContainer: FunctionComponent<PageContainerProps> = (props) => {\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n  const langMode = React.useContext(LanguageContext);\n\n  const [currentTime, setCurrentTime] = useState(DateTime.now());\n\n  useEffect(() => {\n    const clockInterval = setInterval(() => setCurrentTime(DateTime.now()), 1000);\n\n    return function cleanup() {\n      clearInterval(clockInterval);\n    };\n  }, []);\n\n  const { t, i18n } = useTranslation();\n\n  const navigate = useNavigate();\n\n  const goBack = () => () => {\n    navigate(props.previousPage!.route);\n  };\n\n  return (\n    <div className=\"PageContainer\">\n      <div className=\"PageContainer__Controls\">\n        {props.previousPage ? (\n          <div className=\"PageContainer__Controls__Nav\" onClick={goBack()}>\n            <div className=\"PageContainer__Controls__Nav-arrow\" />\n            <div className=\"PageContainer__Controls__Nav-text\">\n              {t(\"Return to\")}: {props.previousPage!.name}\n            </div>\n          </div>\n        ) : undefined}\n\n        <div className=\"PageContainer__Controls__Lang\">\n          {t(\"Language\")}:\n          <Button size=\"small\" variant=\"outlined\" onClick={langMode.toggleLanguage}>\n            {i18n.language === \"en\" ? t(\"English\") : t(\"Polish\")}\n          </Button>\n        </div>\n\n        <div className=\"PageContainer__Controls__Theme\">\n          {t(\"Theme\")}:\n          <Button size=\"small\" variant=\"outlined\" onClick={colorMode.toggleColorMode}>\n            {theme.palette.mode === \"dark\" ? t(\"Dark\") : t(\"Light\")}\n          </Button>\n        </div>\n\n        {props.loggedIn ? <UserIcon /> : undefined}\n      </div>\n\n      <div className=\"PageContainer__Header\">\n        <h1 className=\"PageContainer__Header-text\">{props.header}</h1>\n\n        <div className=\"PageContainer__Header__Clock\">\n          <span className=\"PageContainer__Header__Clock-time\">\n            {currentTime.toFormat(\"hh:mm\", { locale: i18n.language })}\n          </span>\n          <span className=\"PageContainer__Header__Clock-date\">\n            {currentTime.toFormat(\"dd LLLL yyyy\", { locale: i18n.language })}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"PageContainer__Children\">{props.children ?? \"Nothing here\"}</div>\n    </div>\n  );\n};\n\nexport default PageContainer;\n","import { FunctionComponent } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nimport \"./LargeSplash.component.scss\"\n\ninterface LargeSplashProps {\n  borderColor?: string;\n  user?: {\n    name: string;\n    imagePath: string;\n  };\n}\n\nconst LargeSplash: FunctionComponent<LargeSplashProps> = (props) => {\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"LargeSplash\"\n      style={{\n        borderColor: props.borderColor ?? \"text.primary\",\n        backgroundImage: props.user ? `url(${props.user!.imagePath})` : undefined,\n        backgroundSize: props.user ? \"cover\" : undefined,\n        backgroundRepeat: props.user ? \"no-repeat\" : undefined,\n        backgroundPosition: props.user ? \"center\" : undefined,\n      }}\n    >\n      {props.user ? (\n        <div\n          className=\"LargeSplash__Set\"\n          onClick={() => {\n            localStorage.setItem(\"user\", props.user!.name);\n            localStorage.setItem(\"userImage\", props.user!.imagePath);\n            localStorage.setItem(\"userColor\", props.borderColor ?? \"\");\n            navigate(\"/dashboard\");\n          }}\n        />\n      ) : (\n        <div className=\"LargeSplash__Unset\">\n          <div \n            className=\"LargeSplash__Unset__Cross vertical\"\n            style={{borderColor: props.borderColor ?? \"text.primary\"}}\n          />\n          <div \n            className=\"LargeSplash__Unset__Cross horizontal\"\n            style={{borderColor: props.borderColor ?? \"text.primary\"}}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LargeSplash;\n","export default __webpack_public_path__ + \"static/media/mikolaj.082096c4.jpg\";","export default __webpack_public_path__ + \"static/media/lukasz.ea60bad3.jpg\";","export default __webpack_public_path__ + \"static/media/krzysiek.fcfe8779.jpg\";","import PageContainer from \"../components/PageContainer.component\";\nimport { useTranslation } from \"react-i18next\";\n\nimport LargeSplash from \"../components/LargeSplash.component\";\n\nimport mikolajImage from \"../assets/mikolaj.jpg\";\nimport lukaszImage from \"../assets/lukasz.jpg\";\nimport krzysiekImage from \"../assets/krzysiek.jpg\";\n\nimport \"./Login.page.scss\"\n\nexport default function Login() {\n  const { t } = useTranslation();\n\n  return (\n    <PageContainer header={t(\"Account selection\")}>\n        <div className=\"LoginPage\">\n          <LargeSplash borderColor={\"#006AD4\"} user={{ name: \"Mikołaj\", imagePath: mikolajImage }} />\n          <LargeSplash borderColor={\"#00D971\"} user={{ name: \"Łukasz\", imagePath: lukaszImage }} />\n          <LargeSplash borderColor={\"#FAFF00\"} user={{ name: \"Krzysiek\", imagePath: krzysiekImage }} />\n          <LargeSplash />\n        </div>\n    </PageContainer>\n  );\n}\n","import { FunctionComponent } from \"react\";\n\nimport \"./Tile.component.scss\";\n\ninterface TileProps {\n  width?: string;\n  height?: string;\n  header?: string;\n}\n\nconst Tile: FunctionComponent<TileProps> = (props) => (\n  <div className=\"Tile\" style={{ width: props.width, height: props.height }}>\n    {props.header ? <div className=\"Tile__header\">{props.header}</div> : undefined}\n    {props.children}\n  </div>\n);\n\nexport default Tile;\n","import { Button, Rating } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router\";\nimport PageContainer from \"../components/PageContainer.component\";\nimport Tile from \"../components/Tile.component\";\n\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\n\nimport \"./Dashboard.page.scss\";\n\nexport default function Dashboard() {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n\n  return (\n    <PageContainer\n      header={t(\"Good evening\") + `, ${localStorage.getItem(\"user\")}!`}\n      previousPage={{ route: \"/\", name: t(\"Account selection\") }}\n      loggedIn={true}\n    >\n      <div className=\"Dashboard\">\n        <Tile header={t(\"Orders\")}>\n          <div className=\"Dashboard__Orders\">\n            <div>\n              <div className=\"Dashboard__Orders__Stats\">\n                <div>{t(\"Not paid\")}</div> <div className=\"Dashboard__Orders__Stats-number\">44</div>\n              </div>\n\n              <div className=\"Dashboard__Orders__Stats\">\n                <div>{t(\"Not sent\")}</div> <div className=\"Dashboard__Orders__Stats-number\">18</div>\n              </div>\n\n              <div className=\"Dashboard__Orders__Stats\">\n                <div>{t(\"Returns\")}</div> <div className=\"Dashboard__Orders__Stats-number\">9</div>\n              </div>\n\n              <div className=\"Dashboard__Orders__Button_Container\">\n                <Button size=\"small\" variant=\"contained\">\n                  {t(\"Order history\")}\n                </Button>\n              </div>\n            </div>\n            <div className=\"Dashboard__Orders__Spacer\" />\n            <div className=\"Dashboard__Orders__Current\">\n              <div className=\"Dashboard__Orders__Current-number\">71</div>\n              <div className=\"Dashboard__Orders__Current-text\">{t(\"Currently processed orders\")}</div>\n            </div>\n          </div>\n        </Tile>\n\n        <Tile header={t(\"Quality of sales\")}>\n          <div className=\"Dashboard__QoS\">\n            <Rating\n              className=\"Dashboard__QoS__Rating\"\n              name=\"read-only\"\n              value={4.1}\n              size=\"large\"\n              readOnly\n              sx={{ marginBottom: \"15px\" }}\n            />\n            <div className=\"Dashboard__QoS__Sub\">{`${t(\"90 day average\")}: 4.1/5`}</div>\n            <Button size=\"small\" variant=\"contained\">\n              {t(\"Check your category: Specialist\")}\n            </Button>\n          </div>\n        </Tile>\n\n        <Tile header={t(\"Customer feedback\")}>\n          <div className=\"Dashboard__CF\">\n            <div className=\"Dashboard__CF__Testimonial_Container\">\n              <div className=\"Dashboard__CF__Testimonial\">\n                <div className=\"Dashboard__CF__Testimonial__Header\">\n                  <div className=\"Dashboard__CF__Testimonial__Header-number\">4</div>\n                  <div className=\"Dashboard__CF__Testimonial__Header-text\">\n                    <div>Aneta Żalkiewicz</div>\n                    <div>02.11.2021</div>\n                  </div>\n                </div>\n                <div className=\"Dashboard__CF__Testimonial__Body\">\n                  Świetna obsługa, nie było żadnych problemów z dostarczeniem zamów...\n                </div>\n              </div>\n              <div className=\"Dashboard__CF__Testimonial\">\n                <div className=\"Dashboard__CF__Testimonial__Header\">\n                  <div className=\"Dashboard__CF__Testimonial__Header-number\">5</div>\n                  <div className=\"Dashboard__CF__Testimonial__Header-text\">\n                    <div>Jacek Michaliński</div>\n                    <div>28.10.2021</div>\n                  </div>\n                </div>\n                <div className=\"Dashboard__CF__Testimonial__Body\">\n                  Świetna obsługa, nie było żadnych problemów z dostarczeniem zamów...\n                </div>\n              </div>\n            </div>\n            <div className=\"Dashboard__CF__Spacer\" />\n            <div className=\"Dashboard__CF__Average\">\n              <div className=\"Dashboard__CF__Average-number\">\n                <div>4.2</div>\n                <div>/</div>\n                <div>5</div>\n              </div>\n              <div className=\"Dashboard__CF__Average-text\">{t(\"30 day average\")}</div>\n            </div>\n          </div>\n        </Tile>\n\n        <Tile header={t(\"Offer ranking\")}>\n          <div className=\"Dashboard__Rankings\" onClick={() => navigate(\"/ranking\")}>\n            <div className=\"Dashboard__Rankings__Entry\">\n              <div className=\"Dashboard__Rankings__Entry-header\">{t(\"Top seller\")}</div>\n              <div className=\"Dashboard__Rankings__Entry-name\">Zotac GeForce RTX 3060 Ti AMP White 8GB GDDR6</div>\n            </div>\n            <div className=\"Dashboard__Rankings__Entry\">\n              <div className=\"Dashboard__Rankings__Entry-header\">{t(\"Bottom seller\")}</div>\n              <div className=\"Dashboard__Rankings__Entry-name\">Xiaomi Mi True Wireless Earbuds Basic 2</div>\n            </div>\n          </div>\n        </Tile>\n\n        <Tile header={t(\"Sales chart\")}>\n          <div className=\"Dashboard__Sales\" onClick={() => navigate(\"/sales-chart\")}>\n            <div className=\"Dashboard__Sales__Header\">\n              {t(\"Navigate to data from chart\")}:\n            </div>\n            <div className=\"Dashboard__Sales__Chart\">\n              <div className=\"Dashboard__Sales__Chart-labels\">\n                <div>{t(\"last month\")}</div>\n                <div>{t(\"last 3 months\")}</div>\n                <div>{t(\"last year\")}</div>\n              </div>\n\n              {/* TODO: Czarek, do your magic here :) */}\n              <div className=\"Dashboard__Sales__Chart-chart\"></div>\n\n            </div>\n          </div>\n        </Tile>\n\n        <Tile header={t(\"Sales advice\")}>\n          <div className=\"Dashboard__Advice\">\n            <div className=\"Dashboard__Advice__Entry\">\n              <div className=\"Dashboard__Advice__Entry-text\">\n                Czy wiesz, że możesz usprawnić swój kontakt z klientami o 60% korzystając z chatu online, dostępnego z\n                poziomu zakładki...\n              </div>\n              <div className=\"Dashboard__Advice__Entry-icon\">\n                <ArrowForwardIosIcon />\n              </div>\n            </div>\n            <div className=\"Dashboard__Advice__Entry\">\n              <div className=\"Dashboard__Advice__Entry-text\">\n                Zamieszczenie zdjęć produktu w wysokiej rozdzielczości zwiększa wskaźnik kliknięć o ponad 46%!\n                </div>\n              <div className=\"Dashboard__Advice__Entry-icon\">\n                <ArrowForwardIosIcon />\n              </div>\n            </div>\n          </div>\n        </Tile>\n      </div>\n    </PageContainer>\n  );\n}\n","import { FunctionComponent } from \"react\";\n\nimport \"./ProductImage.component.scss\"\n\ninterface ProductImageProps {\n  imageraw?: string;\n  imageName?: string;\n}\n\nconst ProductImage: FunctionComponent<ProductImageProps> = (props) => {\n\n  return (\n    <img className=\"ProductImage\" src={`data:image/jpeg;base64,${props.imageraw}`} alt={props.imageName ?? \"Product image\"}/>\n  );\n};\n\nexport default ProductImage;\n","import { useTranslation } from \"react-i18next\";\nimport PageContainer from \"../components/PageContainer.component\";\nimport Tile from \"../components/Tile.component\";\nimport ProductImage from \"../components/ProductImage.component\";\n\nimport \"./Ranking.page.scss\";\nimport JsonData from './../data/ranking.json'\n\nexport default function Ranking() {\n  const { t } = useTranslation();\n\n  function JsonDataDisplay(){\n    const DisplayData=JsonData.items.map(\n      (i: { picture: string; name: string; sold: number; turnover: number; })=>{\n          return(\n              <tr className=\"Ranking__Table__Row\">\n                  <td>\n                    <ProductImage imageraw={i.picture}/>\n                  </td>\n                  <td>{i.name}</td>\n                  <td>{i.sold}</td>\n                  <td>{i.turnover}</td>\n              </tr>\n          )\n      }\n    )\n    return(\n      <table className=\"Ranking__Table\">\n          <thead>\n              <tr>\n              <th>{t(\"Picture\")}</th>\n              <th>{t(\"Name\")}</th>\n              <th>{t(\"Sold Items\")}</th>\n              <th>{t(\"Turnover\")+ \" [\"+JsonData.currency+\"]\"}</th>\n              </tr>\n          </thead>\n          <tbody>\n              {DisplayData}\n          </tbody>\n      </table>\n    )\n  }\n\n  return (\n    <PageContainer\n      header={t(\"Good evening\") + `, ${localStorage.getItem(\"user\")}!`}\n      previousPage={{ route: \"/dashboard\", name: t(\"Dashboard\") }}\n      loggedIn={true}\n    >\n      <div className=\"Ranking\">\n        <Tile width=\"400px\" height=\"600px\" header={t(\"Category\")}>\n          <div className=\"Ranking__Orders\">\n            <div>\n              <div className=\"Ranking__Orders__Stats\">\n                <div>{t(\"Returns\")}</div> <div className=\"Ranking__Orders__Stats-number\">9</div>\n              </div>\n            </div>\n          </div>\n        </Tile>\n\n        <Tile width=\"1400px\" height=\"600p\">\n          {JsonDataDisplay()}\n        </Tile>\n\n      </div>\n    </PageContainer>\n  );\n}\n","import { useTranslation } from \"react-i18next\";\nimport PageContainer from \"../components/PageContainer.component\";\nimport \"./SalesChart.Page.scss\";\nimport * as d3 from \"d3\";\nimport { useEffect, useRef, useState } from \"react\";\nimport json_data from \"../data/graphData.json\";\n\nexport default function SalesChart() {\n  const { t } = useTranslation();\n\n  const [category, setCategory] = useState(\"\");\n  const [timePeriod, setTimePeriod] = useState(\"today\");\n  const [previousPeriod, setPreviousPeriod] = useState(false);\n\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    function buildGraph(data: ({ time: string; value: number })[], previousData: ({ time: string; value: number })[], xLabel: string, yLabel: string) {\n\n      // define margin\n      const margin = {\n        top: 40,\n        right: 40,\n        bottom: 40,\n        left: 40,\n      };\n\n      //define size\n      const width = ref.current!.offsetWidth - margin.left - margin.right;\n      const height = width * 0.7;\n\n      // define y scale\n      const yMax = Math.max(...data.map((d) => d.value));\n      const y = d3\n        .scaleLinear()\n        .domain([0, yMax])\n        .range([height - margin.bottom, margin.top])\n      ;\n\n      // define x scale\n      const x = d3\n        .scaleBand()\n        .domain(previousPeriod ? previousData.concat(data).map(d => d.time) : data.map(d => d.time))\n        .range([margin.left, width - margin.right])\n        .padding(0.5);\n\n\n      // define svg\n      d3.select(\"svg\").remove();\n      const svg = d3\n        .select(\".graph\")\n        .append(\"svg\")\n        .attr(\"height\", height)\n        .attr(\"width\", width);\n\n      // define axis\n      // @ts-ignore\n      const yAxis = (g) => g.attr(\"transform\", `translate(${margin.left}, 0)`)\n        .call(d3.axisLeft(y));\n\n      // @ts-ignore\n      const xAxis = (g) =>\n        g.attr(\"transform\", `translate(0, ${height - margin.bottom})`)\n          .call(d3.axisBottom(x));\n\n      // define bars\n      // @ts-ignore\n      const bars = (g) => g.selectAll(\"rect\").data(\n        previousPeriod ? previousData.concat(data) : data,\n      ).join(\n        // @ts-ignore\n        (enter) => enter.append(\"rect\"),\n        // @ts-ignore\n        (update) => update,\n        // @ts-ignore\n        (exit) => exit.remove(),\n      )\n        .attr(\"x\", (d: { time: string; }) => x(d.time))\n        .attr(\"y\", (d: { value: d3.NumberValue; }) => y(d.value))\n        .attr(\"height\", (d: { value: d3.NumberValue; }) => y(0) - y(d.value))\n        .attr(\"width\", previousPeriod ? width / previousData.concat(data).length / 2 : width / data.length / 2)\n        // @ts-ignore\n        .attr(\"class\", (d: { time: string; }) => d.time.indexOf(\"p\") !== -1 ? \"previous-data\" : \"\");\n\n      // define bar values texts\n      // @ts-ignore\n      const barsTexts = (g) => g.selectAll(\"text\").data(\n        previousPeriod ? previousData.concat(data) : data,\n      ).join(\n        // @ts-ignore\n        (enter) => enter.append(\"text\"),\n        // @ts-ignore\n        (update) => update,\n        // @ts-ignore\n        (exit) => exit.remove(),\n      )\n        // @ts-ignore\n        .attr(\"x\", (d: { time: string; }) => x(d.time))\n        .attr(\"transform\", `translate(${previousPeriod ? width / previousData.concat(data).length / 8 : width / data.length / 8}, 0)`)\n        .attr(\"y\", (d: { value: d3.NumberValue; }) => y(d.value) - 10)\n        .attr(\"height\", (d: { value: d3.NumberValue; }) => y(0) - y(d.value))\n        .attr(\"width\", previousPeriod ? width / previousData.concat(data).length / 2 : width / data.length / 2)\n        // @ts-ignore\n        .attr(\"class\", \"bar-label\")\n        .text((d: { value: number }) => d.value);\n\n      // put everything together\n      svg.append(\"g\").call(yAxis);\n      svg.append(\"g\").call(xAxis);\n      svg.append(\"g\").call(bars);\n      svg.append(\"g\").call(barsTexts);\n\n      // ad x label\n      svg.append(\"text\")\n        .attr(\"class\", \"graph-label\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"x\", width)\n        .attr(\"y\", height - 6)\n        .text(xLabel);\n\n      // ad y label\n      svg.append(\"text\")\n        .attr(\"class\", \"graph-label\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"y\", 0)\n        .attr(\"dy\", \".75em\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .text(yLabel);\n\n    }\n\n    function buildGraphData() {\n\n      if (category === \"Turnover\") {\n        switch (timePeriod) {\n          case \"today\":\n            buildGraph(json_data.turnover.today.current, json_data.turnover.today.previous, json_data.turnover.today.labelX, json_data.turnover.today.labelY);\n            break;\n          case \"week\":\n            buildGraph(json_data.turnover.week.current, json_data.turnover.week.previous, json_data.turnover.week.labelX, json_data.turnover.week.labelY);\n            break;\n          case \"month\":\n            buildGraph(json_data.turnover.month.current, json_data.turnover.month.previous, json_data.turnover.month.labelX, json_data.turnover.month.labelY);\n            break;\n        }\n      } else if (category === \"Product\") {\n        switch (timePeriod) {\n          case \"today\":\n            buildGraph(json_data.product.today.current, json_data.product.today.previous, json_data.product.today.labelX, json_data.product.today.labelY);\n            break;\n          case \"week\":\n            buildGraph(json_data.product.week.current, json_data.product.week.previous, json_data.product.week.labelX, json_data.product.week.labelY);\n            break;\n          case \"month\":\n            buildGraph(json_data.product.month.current, json_data.product.month.previous, json_data.product.month.labelX, json_data.product.month.labelY);\n            break;\n        }\n      }\n    }\n\n    buildGraphData();\n  }, [category, timePeriod, previousPeriod]);\n\n  return (\n    <PageContainer\n      header={t(\"Sales chart\")}\n      previousPage={{ route: \"/dashboard\", name: t(\"Dashboard\") }}\n      loggedIn={true}\n    >\n      <div className=\"sales-container\">\n        <div className=\"leftBar\">\n          <div className=\"tile\">\n            <div className=\"title\">{t(\"Category\")}</div>\n            <div className={category === \"Turnover\" ? \"optionRow selected\" : \"optionRow\"}\n                 onClick={() => setCategory(\"Turnover\")}>\n              <span className={category === \"Turnover\" ? \"radioIcon selected\" : \"radioIcon\"} />\n              {t(\"Turnover\")}\n            </div>\n            <div className={category === \"Product\" ? \"optionRow\" : \"optionRow\"}\n            onClick={() => setCategory(\"Product\")}>\n              <span className={category === \"Product\" ? \"radioIcon selected\" : \"radioIcon\"} />\n              <span className={category === \"Product\" ? \"selected\" : \"\"}>{t(\"Sales amount\")}</span>\n              <div className=\"productPicker\">{t(\"Choose product\")}</div>\n            </div>\n          </div>\n          <div className=\"tile\">\n            <div className=\"title\">{t(\"Time period\")}</div>\n            <div className={timePeriod === \"today\" ? \"optionRow selected\" : \"optionRow\"}\n                 onClick={() => setTimePeriod(\"today\")}>\n              <span className={timePeriod === \"today\" ? \"radioIcon selected\" : \"radioIcon\"} />\n              {t(\"Today\")}\n            </div>\n            <div className={timePeriod === \"week\" ? \"optionRow selected\" : \"optionRow\"}\n                 onClick={() => setTimePeriod(\"week\")}>\n              <span className={timePeriod === \"week\" ? \"radioIcon selected\" : \"radioIcon\"} />\n              {t(\"Current week\")}\n            </div>\n            <div className={timePeriod === \"month\" ? \"optionRow selected\" : \"optionRow\"}\n                 onClick={() => setTimePeriod(\"month\")}>\n              <span className={timePeriod === \"month\" ? \"radioIcon selected\" : \"radioIcon\"} />\n              {t(\"Current month\")}\n            </div>\n            <div className={previousPeriod ? \"optionRow selected\" : \"optionRow\"}\n                 onClick={() => setPreviousPeriod(!previousPeriod)}>\n              <span className={previousPeriod ? \"checkIcon selected\" : \"checkIcon\"} />\n              {t(\"Include previous period\")}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"tile graph sales-container\" ref={ref}>\n          <div className=\"title\">{t(category)} </div>\n\n        </div>\n      </div>\n\n    </PageContainer>\n  );\n}","import React from \"react\";\nimport { Route, Routes } from \"react-router\";\n\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nimport ColorModeContext from \"./context/colorMode.context\";\nimport getPalette from \"./palette\";\n\nimport LoginPage from \"./pages/Login.page\";\nimport DashboardPage from \"./pages/Dashboard.page\";\nimport RankingPage from \"./pages/Ranking.page\";\nimport LanguageContext from \"./context/language.context\";\nimport { useTranslation } from \"react-i18next\";\n\nimport \"./App.scss\"\nimport SalesChartPage from \"./pages/SalesChart.page\";\n\nexport default function App() {\n  const [mode, setMode] = React.useState<\"light\" | \"dark\">(\"dark\");\n\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => {\n          const newMode = prevMode === \"light\" ? \"dark\" : \"light\";\n\n          document.documentElement.className = \"\";\n          document.documentElement.classList.add(`theme-${newMode}`);\n\n          return newMode;\n        });\n      },\n    }),\n    [],\n  );\n\n  const { i18n } = useTranslation();\n\n  const [, setLang] = React.useState<\"en\" | \"pl\">(\"en\");\n  const langMode = React.useMemo(\n    () => ({\n      toggleLanguage: () => {\n        setLang((prevLang) => {\n          const newLang = prevLang === \"pl\" ? \"en\" : \"pl\";\n\n          i18n.changeLanguage(newLang);\n\n          return newLang;\n        });\n      },\n    }),\n    [i18n],\n  );\n\n  const theme = React.useMemo(() => createTheme(getPalette(mode) as any), [mode]);\n\n  return (\n    <LanguageContext.Provider value={langMode}>\n      <ColorModeContext.Provider value={colorMode}>\n        <ThemeProvider theme={theme}>\n          <div className=\"App\">\n            <Routes>\n              <Route path=\"/\" element={<LoginPage />} />\n              <Route path=\"/dashboard\" element={<DashboardPage />} />\n              <Route path=\"/ranking\" element={<RankingPage />} />\n              <Route path=\"/sales-chart\" element={<SalesChartPage />} />\n            </Routes>\n          </div>\n        </ThemeProvider>\n      </ColorModeContext.Provider>\n    </LanguageContext.Provider>\n  );\n}\n","import { PaletteMode } from \"@mui/material\";\n\nexport const colorPalette = {\n  background: \"background\",\n  tile: {\n    background: \"tile.background\",\n    border: \"tile.border\",\n  },\n  button: {\n    primary: \"button.primary\",\n  },\n  text: {\n    primary: \"text.primary\",\n  },\n};\n\nexport default function getPalette(mode: PaletteMode) {\n  return {\n    palette: {\n      mode,\n      ...(mode === \"dark\"\n        ? {\n            // palette values for dark mode\n            background: \"#0A1929\",\n            tile: {\n              background: \"#001E3C\",\n              border: \"#1E4976\",\n            },\n            button: {\n              primary: \"#0074EA\",\n            },\n            text: {\n              primary: \"#FFFFFF\",\n            },\n          }\n        : {\n            // palette values for light mode\n            background: \"#F6FAFE\",\n            tile: {\n              background: \"#DAECFB\",\n              border: \"#7EBBF1\",\n            },\n            button: {\n              primary: \"#7EBBF1\",\n            },\n            text: {\n              primary: \"#0C1E31\",\n            },\n          }),\n    },\n  };\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\n/**\n * Makes the app scroll to the top on route change\n * @returns null\n */\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport \"./i18n\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport debug from \"debug\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ScrollToTop from \"./components/ScrollToTop.component\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ScrollToTop />\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\nreportWebVitals(debug(\"Web Vitals\"));\n"],"sourceRoot":""}