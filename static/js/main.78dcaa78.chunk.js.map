{"version":3,"sources":["context/colorMode.context.ts","palette.ts","components/Navbar.component.tsx","pages/Home.page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ColorModeContext","React","createContext","toggleColorMode","colorPalette","primary","Navbar","theme","useTheme","colorMode","useContext","Box","sx","display","justifyContent","alignItems","paddingTop","paddingBottom","paddingLeft","paddingRight","Button","marginLeft","variant","onClick","palette","mode","Home","p","App","useState","setMode","useMemo","prevMode","createTheme","background","tile","border","button","text","getPalette","Provider","value","ThemeProvider","width","minHeight","bgcolor","cp","color","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","debug"],"mappings":"4MAIeA,EAFUC,IAAMC,cAAc,CAAEC,gBAAiB,e,QCAnDC,EACC,aADDA,EASL,CACJC,QAAS,gB,2BCNE,SAASC,IACtB,IAAMC,EAAQC,cACRC,EAAYR,IAAMS,WAAWV,GAEnC,OACE,cAACW,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,eAAgB,QAChBC,WAAY,SACZC,WAAY,EACZC,cAAe,EACfC,YAAa,EACbC,aAAc,GARlB,SAWE,eAACR,EAAA,EAAD,oBAEE,cAACS,EAAA,EAAD,CAAQR,GAAI,CAACS,WAAY,GAAIC,QAAQ,YAAYC,QAASd,EAAUN,gBAApE,SAA6G,SAAvBI,EAAMiB,QAAQC,KAAkB,SAAW,e,YCtB1H,SAASC,IACtB,OACE,eAAC,IAAD,CAAKd,GAAI,CAAEe,EAAG,uBAAd,UACE,oDACA,6ECOS,SAASC,IACtB,MAAwB3B,IAAM4B,SAA2B,QAAzD,mBAAOJ,EAAP,KAAaK,EAAb,KACMrB,EAAYR,IAAM8B,SACtB,iBAAO,CACL5B,gBAAiB,WACf2B,GAAQ,SAACE,GAAD,MAA4B,UAAbA,EAAuB,OAAS,eAG3D,IAGIzB,EAAQN,IAAM8B,SAAQ,kBAAME,YHRrB,SAAoBR,GACjC,MAAO,CACLD,QAAQ,aACNC,QACa,SAATA,EACA,CAEES,WAAY,UACZC,KAAM,CACJD,WAAY,UACZE,OAAQ,WAEVC,OAAQ,CACNhC,QAAS,WAEXiC,KAAM,CACJjC,QAAS,YAGb,CAEE6B,WAAY,UACZC,KAAM,CACJD,WAAY,UACZE,OAAQ,WAEVC,OAAQ,CACNhC,QAAS,WAEXiC,KAAM,CACJjC,QAAS,cGtByBkC,CAAWd,MAAe,CAACA,IAEzE,OACE,cAAC,EAAiBe,SAAlB,CAA2BC,MAAOhC,EAAlC,SACE,cAACiC,EAAA,EAAD,CAAenC,MAAOA,EAAtB,SACE,eAACI,EAAA,EAAD,CAAKC,GAAI,CAAE+B,MAAO,OAAQC,UAAW,QAASC,QAASC,EAAeC,MAAOD,EAAQzC,SAArF,UACE,cAACC,EAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAO0C,KAAK,IAAIC,QAAS,cAACvB,EAAD,eC9BrC,IAYewB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,yBCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAACjC,EAAD,QAGJkC,SAASC,eAAe,SAG1Bb,EAAgBc,IAAM,iB","file":"static/js/main.78dcaa78.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\n\nexport default ColorModeContext;","import { PaletteMode } from \"@mui/material\";\n\nexport const colorPalette = {\n  background: \"background\",\n  tile: {\n    background: \"tile.background\",\n    border: \"tile.border\",\n  },\n  button: {\n    primary: \"button.primary\",\n  },\n  text: {\n    primary: \"text.primary\",\n  },\n};\n\nexport default function getPalette(mode: PaletteMode) {\n  return {\n    palette: {\n      mode,\n      ...(mode === \"dark\"\n        ? {\n            // palette values for dark mode\n            background: \"#0A1929\",\n            tile: {\n              background: \"#001E3C\",\n              border: \"#1E4976\",\n            },\n            button: {\n              primary: \"#0074EA\",\n            },\n            text: {\n              primary: \"#FFFFFF\",\n            },\n          }\n        : {\n            // palette values for light mode\n            background: \"#F6FAFE\",\n            tile: {\n              background: \"#DAECFB\",\n              border: \"#7EBBF1\",\n            },\n            button: {\n              primary: \"#7EBBF1\",\n            },\n            text: {\n              primary: \"#0C1E31\",\n            },\n          }),\n    },\n  };\n}\n","import React from \"react\";\n\nimport { Box, Button, useTheme } from \"@mui/material\";\n\nimport ColorModeContext from \"../context/colorMode.context\";\n\nexport default function Navbar() {\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        justifyContent: \"right\",\n        alignItems: \"center\",\n        paddingTop: 1,\n        paddingBottom: 1,\n        paddingLeft: 2,\n        paddingRight: 2\n      }}\n    >\n      <Box>\n        Motyw:\n        <Button sx={{marginLeft: 1}} variant=\"contained\" onClick={colorMode.toggleColorMode}>{theme.palette.mode === \"dark\" ? \"Ciemny\" : \"Jasny\"}</Button>\n      </Box>\n    </Box>\n  );\n}\n","import { Box } from \"@mui/system\";\n\nexport default function Home() {\n  return (\n    <Box sx={{ p: \"10px 20px 10px 20px\" }}>\n      <h1>Hello cruel world!</h1>\n      <p>We're here again, but in color this time!</p>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Route, Routes } from \"react-router\";\n\nimport { Box } from \"@mui/material\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nimport ColorModeContext from \"./context/colorMode.context\";\nimport getPalette, { colorPalette as cp } from \"./palette\";\n\nimport Navbar from \"./components/Navbar.component\";\n\nimport Home from \"./pages/Home.page\";\n\nexport default function App() {\n  const [mode, setMode] = React.useState<\"light\" | \"dark\">(\"dark\");\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === \"light\" ? \"dark\" : \"light\"));\n      },\n    }),\n    [],\n  );\n\n  const theme = React.useMemo(() => createTheme(getPalette(mode) as any), [mode]);\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>\n        <Box sx={{ width: \"100%\", minHeight: \"100vh\", bgcolor: cp.background, color: cp.text.primary }}>\n          <Navbar />\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n          </Routes>\n        </Box>\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport debug from \"debug\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\nreportWebVitals(debug(\"Web Vitals\"));\n"],"sourceRoot":""}