{"version":3,"sources":["i18n.ts","context/colorMode.context.ts","palette.ts","context/language.context.ts","components/PageContainer.component.tsx","components/LargeSplash.component.tsx","assets/mikolaj.jpg","assets/lukasz.jpg","assets/krzysiek.jpg","pages/Login.page.tsx","components/Tile.component.tsx","pages/Dashboard.page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["i18n","use","initReactI18next","LanguageDetector","init","resources","pl","translation","lng","interpolation","escapeValue","ColorModeContext","React","createContext","toggleColorMode","colorPalette","primary","LanguageContext","toggleLanguage","PageContainer","props","theme","useTheme","colorMode","useContext","langMode","useState","DateTime","now","currentTime","setCurrentTime","setInterval","useTranslation","t","navigate","useNavigate","Box","sx","display","justifyContent","alignItems","paddingTop","paddingBottom","paddingLeft","paddingRight","previousPage","className","onClick","route","name","undefined","marginRight","marginLeft","Button","size","variant","language","palette","mode","header","fontSize","component","fontWeight","toFormat","locale","children","LargeSplash","position","borderWidth","borderStyle","borderColor","width","height","borderRadius","cursor","backgroundImage","imagePath","backgroundSize","backgroundRepeat","backgroundPosition","style","top","left","transform","Login","mikolajImage","lukaszImage","krzysiekImage","Tile","Dashboard","flexWrap","flexBasis","margin","App","setMode","useMemo","prevMode","newMode","document","documentElement","classList","add","setLang","prevLang","newLang","changeLanguage","createTheme","background","tile","border","button","text","getPalette","Provider","value","ThemeProvider","minHeight","bgcolor","cp","color","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","debug"],"mappings":"6PAsBAA,IACGC,IAAIC,KACJD,IAAIE,KACJC,KAAK,CACJC,UAnBc,CAChBC,GAAI,CACFC,YAAa,CACX,oBAAqB,iBACrB,MAAS,QACT,KAAQ,SACR,MAAS,QACT,SAAY,aACZ,OAAU,SACV,QAAW,YACX,8BAA0B,qCAU5BC,IAAK,KAILC,cAAe,CACbC,aAAa,KAIFV,EAAf,EAAeA,I,wCChCFW,EAFUC,IAAMC,cAAc,CAAEC,gBAAiB,e,QCAnDC,EACC,aADDA,EASL,CACJC,QAAS,gB,gDCREC,EAFSL,IAAMC,cAAc,CAAEK,eAAgB,e,eCoG/CC,EAlF8C,SAACC,GAAW,IAAD,EAChEC,EAAQC,cACRC,EAAYX,IAAMY,WAAWb,GAC7Bc,EAAWb,IAAMY,WAAWP,GAElC,EAAsCS,mBAASC,WAASC,OAAxD,mBAAOC,EAAP,KAAoBC,EAApB,KAEAC,aAAY,kBAAMD,EAAeH,WAASC,SAAQ,KAElD,MAAoBI,cAAZC,EAAR,EAAQA,EAAGjC,EAAX,EAAWA,KAELkC,EAAWC,cAMjB,OACE,qCACE,eAACC,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,eAAgB,OAChBC,WAAY,SACZC,WAAY,EACZC,cAAe,EACfC,YAAa,EACbC,aAAc,GARlB,UAWGxB,EAAMyB,aACL,sBAAKC,UAAU,gCAAgCC,QAlBlC,WACnBb,EAASd,EAAMyB,aAAcG,QAiBvB,UACE,qBAAKF,UAAU,yBACf,sBAAKA,UAAU,sBAAf,UACGb,EAAE,aADL,KACqBb,EAAMyB,aAAcI,gBAGzCC,EAEJ,eAACd,EAAA,EAAD,CAAKC,GAAI,CAAEc,YAAa,EAAGC,WAAY,QAAvC,UACGnB,EAAE,YADL,IAEE,cAACoB,EAAA,EAAD,CAAQhB,GAAI,CAAEe,WAAY,GAAKE,KAAK,QAAQC,QAAQ,WAAWR,QAAStB,EAASP,eAAjF,SACqB,OAAlBlB,EAAKwD,SAAoBvB,EAAE,WAAaA,EAAE,eAI/C,eAACG,EAAA,EAAD,WACGH,EAAE,SADL,IAEE,cAACoB,EAAA,EAAD,CAAQhB,GAAI,CAAEe,WAAY,GAAKE,KAAK,QAAQC,QAAQ,WAAWR,QAASxB,EAAUT,gBAAlF,SAC0B,SAAvBO,EAAMoC,QAAQC,KAAkBzB,EAAE,QAAUA,EAAE,iBAKrD,eAACG,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,eAAgB,OAChBC,WAAY,SACZC,WAAY,EACZC,cAAe,EACfC,YAAa,EACbC,aAAc,GARlB,UAWE,cAACR,EAAA,EAAD,UACE,6BAAKhB,EAAMuC,WAEb,eAACvB,EAAA,EAAD,CAAKC,GAAI,CAAEe,WAAY,OAAQQ,SAAU,OAAzC,UACE,cAACxB,EAAA,EAAD,CAAKyB,UAAU,OAAOxB,GAAI,CAAEc,YAAa,EAAGW,WAAY,KAAxD,SACGjC,EAAYkC,SAAS,QAAS,CAAEC,OAAQhE,EAAKwD,aAEhD,cAACpB,EAAA,EAAD,CAAKyB,UAAU,OAAOxB,GAAI,CAAEyB,WAAY,KAAxC,SACGjC,EAAYkC,SAAS,eAAgB,CAAEC,OAAQhE,EAAKwD,mBAI3D,cAACpB,EAAA,EAAD,oBAAMhB,EAAM6C,gBAAZ,QAAwB,qBChCfC,EAxD0C,SAAC9C,GAAW,IAAD,MAC5Dc,EAAWC,cAEjB,OACE,cAAC,IAAD,CACEE,GAAI,CACF8B,SAAU,WACVC,YAAa,MACbC,YAAa,QACbC,YAAW,UAAElD,EAAMkD,mBAAR,QAAuB,eAClCC,MAAO,QACPC,OAAQ,QACRC,aAAc,MACdC,OAAQ,UACRC,gBAAiBvD,EAAMwD,UAAN,cAAyBxD,EAAMwD,UAA/B,UAA8C1B,EAC/D2B,eAAgBzD,EAAMwD,UAAY,aAAU1B,EAC5C4B,iBAAkB1D,EAAMwD,UAAY,iBAAc1B,EAClD6B,mBAAoB3D,EAAMwD,UAAY,cAAW1B,GAbrD,SAgBG9B,EAAMwD,UACL,qBAAKI,MAAO,CAACT,MAAO,OAAQC,OAAQ,QAASzB,QAAS,WAAOb,EAAS,iBAEtE,qCACE,cAAC,IAAD,CACEG,GAAI,CACF+B,YAAa,MACbC,YAAa,QACbC,YAAW,UAAElD,EAAMkD,mBAAR,QAAuB,eAClCE,OAAQ,MACRD,MAAO,EACPJ,SAAU,WACVc,IAAK,MACLC,KAAM,MACNC,UAAW,2BAGf,cAAC,IAAD,CACE9C,GAAI,CACF+B,YAAa,MACbC,YAAa,QACbC,YAAW,UAAElD,EAAMkD,mBAAR,QAAuB,eAClCE,OAAQ,EACRD,MAAO,MACPW,KAAM,MACND,IAAK,MACLd,SAAU,WACVgB,UAAW,iCCxDV,MAA0B,oCCA1B,MAA0B,mCCA1B,MAA0B,qCCU1B,SAASC,IACtB,IAAQnD,EAAMD,cAANC,EAER,OACE,cAAC,EAAD,CAAe0B,OAAQ1B,EAAE,qBAAzB,SACE,eAAC,IAAD,CACEI,GAAI,CACF8B,SAAU,WACV7B,QAAS,OACT2C,IAAK,OACLE,UAAW,mBACXZ,MAAO,QACPhC,eAAgB,SAChBC,WAAY,SACZ,0BAA2B,CACzBY,WAAY,SAVlB,UAcE,cAAC,EAAD,CAAawB,UAAWS,EAAcf,YAAa,YACnD,cAAC,EAAD,CAAaM,UAAWU,EAAahB,YAAa,YAClD,cAAC,EAAD,CAAaM,UAAWW,EAAejB,YAAa,YACpD,cAAC,EAAD,S,UCjBOkB,EAN4B,SAACpE,GAAD,OACzC,qBAAK0B,UAAU,OAAOkC,MAAO,CAAET,MAAOnD,EAAMmD,MAAOC,OAAQpD,EAAMoD,QAAjE,SACGpD,EAAM6C,Y,MCJI,SAASwB,IACtB,IAAQxD,EAAMD,cAANC,EAER,OACE,cAAC,EAAD,CAAe0B,OAAQ1B,EAAE,+BAA2BY,aAAc,CAAEG,MAAO,IAAKC,KAAMhB,EAAE,sBAAxF,SACE,eAACG,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTiC,MAAO,QACPmB,SAAU,OAEVvB,SAAU,WACVc,IAAK,OACLE,UAAW,mBACX5C,eAAgB,SAEhB,SAAU,CACRoD,UAAW,MACXC,OAAQ,SAbd,UAiBE,cAAC,EAAD,CAAMrB,MAAM,QAAQC,OAAO,UAC3B,cAAC,EAAD,CAAMD,MAAM,QAAQC,OAAO,UAC3B,cAAC,EAAD,CAAMD,MAAM,QAAQC,OAAO,UAC3B,cAAC,EAAD,CAAMD,MAAM,QAAQC,OAAO,UAC3B,cAAC,EAAD,CAAMD,MAAM,QAAQC,OAAO,UAC3B,cAAC,EAAD,CAAMD,MAAM,QAAQC,OAAO,eCpBpB,SAASqB,IACtB,MAAwBjF,IAAMc,SAA2B,QAAzD,mBAAOgC,EAAP,KAAaoC,EAAb,KACMvE,EAAYX,IAAMmF,SACtB,iBAAO,CACLjF,gBAAiB,WACfgF,GAAQ,SAACE,GACP,IAAMC,EAAuB,UAAbD,EAAuB,OAAS,QAKhD,OAHAE,SAASC,gBAAgBrD,UAAY,GACrCoD,SAASC,gBAAgBC,UAAUC,IAAnC,gBAAgDJ,IAEzCA,SAIb,IAGMjG,EAASgC,cAAThC,KAER,EAAoBY,IAAMc,SAAsB,MAAvC4E,EAAT,oBACM7E,EAAWb,IAAMmF,SACrB,iBAAO,CACL7E,eAAgB,WACdoF,GAAQ,SAACC,GACP,IAAMC,EAAuB,OAAbD,EAAoB,KAAO,KAI3C,OAFAvG,EAAKyG,eAAeD,GAEbA,SAIb,CAACxG,IAGGqB,EAAQT,IAAMmF,SAAQ,kBAAMW,YVlCrB,SAAoBhD,GACjC,MAAO,CACLD,QAAQ,aACNC,QACa,SAATA,EACA,CAEEiD,WAAY,UACZC,KAAM,CACJD,WAAY,UACZE,OAAQ,WAEVC,OAAQ,CACN9F,QAAS,WAEX+F,KAAM,CACJ/F,QAAS,YAGb,CAEE2F,WAAY,UACZC,KAAM,CACJD,WAAY,UACZE,OAAQ,WAEVC,OAAQ,CACN9F,QAAS,WAEX+F,KAAM,CACJ/F,QAAS,cUIyBgG,CAAWtD,MAAe,CAACA,IAEzE,OACE,cAAC,EAAgBuD,SAAjB,CAA0BC,MAAOzF,EAAjC,SACE,cAAC,EAAiBwF,SAAlB,CAA2BC,MAAO3F,EAAlC,SACE,cAAC4F,EAAA,EAAD,CAAe9F,MAAOA,EAAtB,SACE,cAACe,EAAA,EAAD,CAAKC,GAAI,CAAEkC,MAAO,OAAQ6C,UAAW,QAASC,QAASC,EAAeC,MAAOD,EAAQtG,SAArF,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwG,KAAK,IAAIC,QAAS,cAACrC,EAAD,MACzB,cAAC,IAAD,CAAOoC,KAAK,aAAaC,QAAS,cAAChC,EAAD,iBCzDhD,IAYeiC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,yBCEdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAACxC,EAAD,QAGRK,SAASoC,eAAe,SAG5BZ,EAAgBa,IAAM,iB","file":"static/js/main.6a479dba.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\n// the translations\n// (tip move them in a JSON file and import them,\n// or even better, manage them separated from your code: https://react.i18next.com/guides/multiple-translation-files)\nconst resources = {\n  pl: {\n    translation: {\n      \"Account selection\": \"Wybór konta\",\n      \"Theme\": \"Motyw\",\n      \"Dark\": \"Ciemny\",\n      \"Light\": \"Jasny\",\n      \"Language\": \"Język\",\n      \"Polish\": \"Polski\",\n      \"English\": \"Angielski\",\n      \"Good evening, Mikołaj!\": \"Dobry wieczór, Mikołaj!\"\n    }\n  }\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(LanguageDetector)\n  .init({\n    resources,\n    lng: \"en\", // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\n    // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\n    // if you're using a language detector, do not define the lng option\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\n  export default i18n;\n","import React from \"react\";\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\n\nexport default ColorModeContext;","import { PaletteMode } from \"@mui/material\";\n\nexport const colorPalette = {\n  background: \"background\",\n  tile: {\n    background: \"tile.background\",\n    border: \"tile.border\",\n  },\n  button: {\n    primary: \"button.primary\",\n  },\n  text: {\n    primary: \"text.primary\",\n  },\n};\n\nexport default function getPalette(mode: PaletteMode) {\n  return {\n    palette: {\n      mode,\n      ...(mode === \"dark\"\n        ? {\n            // palette values for dark mode\n            background: \"#0A1929\",\n            tile: {\n              background: \"#001E3C\",\n              border: \"#1E4976\",\n            },\n            button: {\n              primary: \"#0074EA\",\n            },\n            text: {\n              primary: \"#FFFFFF\",\n            },\n          }\n        : {\n            // palette values for light mode\n            background: \"#F6FAFE\",\n            tile: {\n              background: \"#DAECFB\",\n              border: \"#7EBBF1\",\n            },\n            button: {\n              primary: \"#7EBBF1\",\n            },\n            text: {\n              primary: \"#0C1E31\",\n            },\n          }),\n    },\n  };\n}\n","import React from \"react\";\n\nconst LanguageContext = React.createContext({ toggleLanguage: () => {} });\n\nexport default LanguageContext;","import React, { FunctionComponent, useState } from \"react\";\nimport { Box, Button, useTheme } from \"@mui/material\";\n\nimport { DateTime } from \"luxon\";\n\nimport ColorModeContext from \"../context/colorMode.context\";\nimport { useTranslation } from \"react-i18next\";\nimport LanguageContext from \"../context/language.context\";\n\nimport \"./PageContainer.component.scss\";\nimport { useNavigate } from \"react-router\";\n\ninterface PageContainerProps {\n  header: string;\n  previousPage?: {\n    name: string;\n    route: string;\n  };\n}\n\nconst PageContainer: FunctionComponent<PageContainerProps> = (props) => {\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n  const langMode = React.useContext(LanguageContext);\n\n  const [currentTime, setCurrentTime] = useState(DateTime.now());\n\n  setInterval(() => setCurrentTime(DateTime.now()), 1000);\n\n  const { t, i18n } = useTranslation();\n\n  const navigate = useNavigate();\n\n  const goBack = () => () => {\n    navigate(props.previousPage!.route);\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"left\",\n          alignItems: \"center\",\n          paddingTop: 1,\n          paddingBottom: 1,\n          paddingLeft: 2,\n          paddingRight: 2,\n        }}\n      >\n        {props.previousPage ? (\n          <div className=\"PageContainer__back_container\" onClick={goBack()}>\n            <div className=\"PageContainer__arrow\" />\n            <div className=\"PageContainer__text\">\n              {t(\"Return to\")}: {props.previousPage!.name}\n            </div>\n          </div>\n        ) : undefined}\n\n        <Box sx={{ marginRight: 3, marginLeft: \"auto\" }}>\n          {t(\"Language\")}:\n          <Button sx={{ marginLeft: 1 }} size=\"small\" variant=\"outlined\" onClick={langMode.toggleLanguage}>\n            {i18n.language === \"en\" ? t(\"English\") : t(\"Polish\")}\n          </Button>\n        </Box>\n\n        <Box>\n          {t(\"Theme\")}:\n          <Button sx={{ marginLeft: 1 }} size=\"small\" variant=\"outlined\" onClick={colorMode.toggleColorMode}>\n            {theme.palette.mode === \"dark\" ? t(\"Dark\") : t(\"Light\")}\n          </Button>\n        </Box>\n      </Box>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"left\",\n          alignItems: \"center\",\n          paddingTop: 1,\n          paddingBottom: 1,\n          paddingLeft: 2,\n          paddingRight: 2,\n        }}\n      >\n        <Box>\n          <h1>{props.header}</h1>\n        </Box>\n        <Box sx={{ marginLeft: \"auto\", fontSize: \"2em\" }}>\n          <Box component=\"span\" sx={{ marginRight: 1, fontWeight: 600 }}>\n            {currentTime.toFormat(\"hh:mm\", { locale: i18n.language })}\n          </Box>\n          <Box component=\"span\" sx={{ fontWeight: 300 }}>\n            {currentTime.toFormat(\"dd LLLL yyyy\", { locale: i18n.language })}\n          </Box>\n        </Box>\n      </Box>\n      <Box>{props.children ?? \"Nothing here\"}</Box>\n    </>\n  );\n};\n\nexport default PageContainer;\n","import Box from \"@mui/system/Box\";\nimport React, { FunctionComponent } from \"react\";\nimport { useNavigate } from \"react-router\";\n\ninterface LargeSplashProps {\n  imagePath?: string;\n  borderColor?: string;\n}\n\nconst LargeSplash: FunctionComponent<LargeSplashProps> = (props) => {\n  const navigate = useNavigate();\n\n  return (\n    <Box\n      sx={{\n        position: \"relative\",\n        borderWidth: \"4px\",\n        borderStyle: \"solid\",\n        borderColor: props.borderColor ?? \"text.primary\",\n        width: \"260px\",\n        height: \"260px\",\n        borderRadius: \"50%\",\n        cursor: \"pointer\",\n        backgroundImage: props.imagePath ? `url(${props.imagePath})` : undefined,\n        backgroundSize: props.imagePath ? \"cover\" : undefined,\n        backgroundRepeat: props.imagePath ? \"no-repeat\" : undefined,\n        backgroundPosition: props.imagePath ? \"center\" : undefined,\n      }}\n    >\n      {props.imagePath ? (\n        <div style={{width: \"100%\", height: \"100%\"}} onClick={() => {navigate(\"/dashboard\")}} />\n      ) : (\n        <>\n          <Box\n            sx={{\n              borderWidth: \"2px\",\n              borderStyle: \"solid\",\n              borderColor: props.borderColor ?? \"text.primary\",\n              height: \"60%\",\n              width: 0,\n              position: \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\",\n            }}\n          />\n          <Box\n            sx={{\n              borderWidth: \"2px\",\n              borderStyle: \"solid\",\n              borderColor: props.borderColor ?? \"text.primary\",\n              height: 0,\n              width: \"60%\",\n              left: \"50%\",\n              top: \"50%\",\n              position: \"absolute\",\n              transform: \"translate(-50%, -50%)\",\n            }}\n          />\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default LargeSplash;\n","export default __webpack_public_path__ + \"static/media/mikolaj.082096c4.jpg\";","export default __webpack_public_path__ + \"static/media/lukasz.ea60bad3.jpg\";","export default __webpack_public_path__ + \"static/media/krzysiek.fcfe8779.jpg\";","import { Box } from \"@mui/system\";\nimport PageContainer from \"../components/PageContainer.component\";\nimport { useTranslation } from \"react-i18next\";\n\nimport LargeSplash from \"../components/LargeSplash.component\";\n\nimport mikolajImage from \"../assets/mikolaj.jpg\";\nimport lukaszImage from \"../assets/lukasz.jpg\";\nimport krzysiekImage from \"../assets/krzysiek.jpg\";\n\nexport default function Login() {\n  const { t } = useTranslation();\n\n  return (\n    <PageContainer header={t(\"Account selection\")}>\n      <Box\n        sx={{\n          position: \"absolute\",\n          display: \"flex\",\n          top: \"50vh\",\n          transform: \"translateY(-50%)\",\n          width: \"100vw\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          \"& > *:not(:first-child)\": {\n            marginLeft: \"82px\",\n          },\n        }}\n      >\n        <LargeSplash imagePath={mikolajImage} borderColor={\"#006AD4\"} />\n        <LargeSplash imagePath={lukaszImage} borderColor={\"#00D971\"}/>\n        <LargeSplash imagePath={krzysiekImage} borderColor={\"#FAFF00\"}/>\n        <LargeSplash />\n      </Box>\n    </PageContainer>\n  );\n}\n","import { FunctionComponent } from \"react\";\n\nimport \"./Tile.component.scss\";\n\ninterface TileProps {\n  width: string;\n  height: string;\n}\n\nconst Tile: FunctionComponent<TileProps> = (props) => (\n  <div className=\"Tile\" style={{ width: props.width, height: props.height }}>\n    {props.children}\n  </div>\n);\n\nexport default Tile;\n","import { Box } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport PageContainer from \"../components/PageContainer.component\";\nimport Tile from \"../components/Tile.component\";\n\nimport \"./Dashboard.page.scss\";\n\nexport default function Dashboard() {\n  const { t } = useTranslation();\n\n  return (\n    <PageContainer header={t(\"Good evening, Mikołaj!\")} previousPage={{ route: \"/\", name: t(\"Account selection\") }}>\n      <Box\n        sx={{\n          display: \"flex\",\n          width: \"100vw\",\n          flexWrap: \"wrap\",\n\n          position: \"absolute\",\n          top: \"50vh\",\n          transform: \"translateY(-50%)\",\n          justifyContent: \"center\",\n\n          \"& > * \": {\n            flexBasis: \"30%\",\n            margin: \"15px\",\n          },\n        }}\n      >\n        <Tile width=\"600px\" height=\"300px\"></Tile>\n        <Tile width=\"600px\" height=\"300px\"></Tile>\n        <Tile width=\"600px\" height=\"300px\"></Tile>\n        <Tile width=\"600px\" height=\"300px\"></Tile>\n        <Tile width=\"600px\" height=\"300px\"></Tile>\n        <Tile width=\"600px\" height=\"300px\"></Tile>\n      </Box>\n    </PageContainer>\n  );\n}\n","import React from \"react\";\nimport { Route, Routes } from \"react-router\";\n\nimport { Box } from \"@mui/material\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nimport ColorModeContext from \"./context/colorMode.context\";\nimport getPalette, { colorPalette as cp } from \"./palette\";\n\nimport LoginPage from \"./pages/Login.page\";\nimport DashboardPage from \"./pages/Dashboard.page\";\nimport LanguageContext from \"./context/language.context\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function App() {\n  const [mode, setMode] = React.useState<\"light\" | \"dark\">(\"dark\");\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => {\n          const newMode = prevMode === \"light\" ? \"dark\" : \"light\";\n\n          document.documentElement.className = \"\";\n          document.documentElement.classList.add(`theme-${newMode}`);\n\n          return newMode;\n        });\n      },\n    }),\n    [],\n  );\n\n  const { i18n } = useTranslation();\n\n  const [, setLang] = React.useState<\"en\" | \"pl\">(\"en\");\n  const langMode = React.useMemo(\n    () => ({\n      toggleLanguage: () => {\n        setLang((prevLang) => {\n          const newLang = prevLang === \"pl\" ? \"en\" : \"pl\";\n\n          i18n.changeLanguage(newLang);\n\n          return newLang;\n        });\n      },\n    }),\n    [i18n],\n  );\n\n  const theme = React.useMemo(() => createTheme(getPalette(mode) as any), [mode]);\n\n  return (\n    <LanguageContext.Provider value={langMode}>\n      <ColorModeContext.Provider value={colorMode}>\n        <ThemeProvider theme={theme}>\n          <Box sx={{ width: \"100%\", minHeight: \"100vh\", bgcolor: cp.background, color: cp.text.primary }}>\n            <Routes>\n              <Route path=\"/\" element={<LoginPage />} />\n              <Route path=\"/dashboard\" element={<DashboardPage />} />\n            </Routes>\n          </Box>\n        </ThemeProvider>\n      </ColorModeContext.Provider>\n    </LanguageContext.Provider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport \"./i18n\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport debug from \"debug\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n\nreportWebVitals(debug(\"Web Vitals\"));\n"],"sourceRoot":""}